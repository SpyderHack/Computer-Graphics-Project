#include<GL/glut.h>
#include<stdio.h>
#include<math.h>
#define pi 3.14
#include<windows.h>
int x1, yk, x2, y2, x3, y3;
int k, l;
int p;

void myinit()
{
	glClear(GL_COLOR_BUFFER_BIT);
	//glutSwapBuffers();
	glClearColor(1.0, 1.0, 1.0, 0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(-500, 500, -500, 500);
}
void pixel(int k, int l)
{
	glColor3f(1, 0, 0);
	glPointSize(5);
	glBegin(GL_POINTS);
	glVertex2i(k, l);
	glEnd();
	glFlush();
}
void putpixel(int x1, int yk, int x2, int y2, int x3, int y3)
{
	glColor3f(0, 0, 1);
	glPointSize(1);
	glBegin(GL_TRIANGLES);
	glVertex2i(x1, yk);
	glVertex2i(x2, y2);
	glVertex2i(x3, y3);
	glEnd();
	glFlush();
}
/*void rotate(int x1,int yk,int x2,int y2,int x3,int y3)
{

putpixel(x1,yk,x2,y2,x3,y3);
Sleep(500);
int x4,y4,x5,y5;
for(int i=0;i<100;i++)
{


putpixel(x1,yk,x2,y2,x3,y3);
Sleep(50);
glClear(GL_COLOR_BUFFER_BIT);
for(int i=0;i<360;i++)
{
pixel( k, l);
x4=x2*cos(i*pi/180.0)-y2*sin(i*pi/180.0);
y4=x2*sin(i*pi/180.0)+y2*cos(i*pi/180.0);
x5=x3*cos(i*pi/180.0)-y3*sin(i*pi/180.0);
y5=x2*sin(i*pi/180.0)+y2*cos(i*pi/180.0);
putpixel(x1,yk,x4,y4,x5,y5);
Sleep(50);
glClear(GL_COLOR_BUFFER_BIT);
}
}
}
*/
/*void scale(int x1, int yk, int x2, int y2, int x3, int y3, int p)
{

	int x4, y4, x5, y5, x6, y6;
	x4 = p * x1;
	y4 = p * yk;
	x5 = p * x2;
	y5 = p * y2;
	x6 = p * x3;
	y6 = p * y3;
	putpixel(x1, yk, x2, y2, x3, y3);
	Sleep(50);
	glClear(GL_COLOR_BUFFER_BIT);
	putpixel(x4, y4, x5, y5, x6, y6);
}*/
void ref(int x1, int yk, int x2, int y2, int x3, int y3)
{
	putpixel(x1, yk, x2, y2, x3, y3);
	Sleep(50);
	glClear(GL_COLOR_BUFFER_BIT);
	putpixel(-x1, yk, -x2, y2, -x3, y3);
}
void drawe()
{
	ref(x1, yk, x2, y2, x3, y3);
	glFlush();
	//rotate(x1,yk,x2,y2,x3,y3);
	//for (int i = 0;i < 100;i++)
	//{
	//	scale(x1, yk, x2, y2, x3, y3, p);
	//	glFlush();
	//}
}

void main(int argc, char **argv)
{

	printf("Enter x1 and y1=");
	scanf_s("%d %d", &x1, &yk);
	printf("Enter x2 and y2=");
	scanf_s("%d %d", &x2, &y2);
	printf("Enter x3 and y3=");
	scanf_s("%d %d", &x3, &y3);
    printf("enter scale value: ");
	scanf_s("%d ", &p);
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(1000, 1000);
	glutInitWindowPosition(20, 20);
	glutCreateWindow("PROJECT CIRCLE");
	myinit();
	glutDisplayFunc(drawe);
	glutMainLoop();
}